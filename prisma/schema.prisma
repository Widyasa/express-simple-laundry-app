// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id         String   @id @default(cuid())
  email      String   @unique
  username   String   @unique
  password   String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model ServiceCategories {
  id         String     @id @default(cuid())
  name       String     @unique
  Service    Services[]
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
}

model Services {
  id               String             @id @default(cuid())
  name             String             @unique
  price            Int
  category         ServiceCategories  @relation(fields: [category_id], references: [id])
  category_id      String
  TransactionItems TransactionItems[]
  created_at       DateTime           @default(now())
  updated_at       DateTime           @updatedAt
}

enum TransactionStatus {
  on_progress
  pending
  finished
  canceled
}

model Transactions {
  id               String             @id @default(cuid())
  total_price      Int
  total_pay        Int
  total_exchange   Int
  start_date       String
  end_date         String
  status           TransactionStatus  @default(on_progress)
  created_at       DateTime           @default(now())
  updated_at       DateTime           @updatedAt
  TransactionItems TransactionItems[]
}

model TransactionItems {
  id             String       @id @default(cuid())
  service_id     String
  transaction_id String
  qty            Int
  service        Services     @relation(fields: [service_id], references: [id])
  transaction    Transactions @relation(fields: [transaction_id], references: [id])
  created_at     DateTime     @default(now())
  updated_at     DateTime     @updatedAt
}

model MechineCategories {
  id         String     @id @default(cuid())
  name       String     @unique
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
  Mechines   Mechines[]
}

enum mechineStatus {
  active
  inactive
}

model Mechines {
  id                    String                @id @default(cuid())
  name                  String
  code                  String
  last_maintanance_date String
  status                mechineStatus         @default(inactive)
  next_maintanance_date String
  category              MechineCategories     @relation(fields: [category_id], references: [id])
  category_id           String
  created_at            DateTime              @default(now())
  updated_at            DateTime              @updatedAt
  MechineMaintenance    MechineMaintenances[]
}

model MechineMaintenances {
  id               String   @id @default(cuid())
  mechines         Mechines @relation(fields: [mechine_id], references: [id])
  mechine_id       String
  maintenance_date String
  description      String
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt
}
